<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
    <script>
        /*
        
     var 会变量提升 存入到全局活动变量中 不支持块  允许有多个同名变量

    let 不会变量提升且有残存死区(在变量定义的上方都不会访问到这个变量) 
        支持块 
        不允许有多个同名变量  
        不会存入到全局活动变量中
    const 不会变量提升 且有暂存死区（在变量定义的上方都不会访问到这个变量）
          不会存入到全局的活动变量对象中
          不允许有多个同名的变量
          值是不能被改变的（引用类型可以改变属性值）
          声明了必须赋值

        
        
        */
    // var a = 1;
    // var a =2;
    // console.log(a);//2
    // let a =1;
    // let a=2;
    // console.log(a);//报错
    // for(let i = 0;i<3;i++){
    //     console.log(i);
    // }
    // console.log(i);


    
        // var a = 10;
       
    // {     let a  = 10;
    //     {
    //         {
    //             {
    //                 console.log(a);//10
    //             }
    //         }
    //     }
    // }

     
    // console.log(a);//function a(){}
    // var a = 12;
    // function a(){}
    // console.log(window);//window中有a:12

    // console.log(a);//报错   因为let声明的变量 不能有同名的
    // let a = 12;
    // function a(){}
    // console.log(window);
    // function fun(a){         //只要块级作用域内存在let命令，它所声明的变量就“绑定”（binding）这个区域，不再受外部的影响。在let声                             明变量前，对tmp赋值会报错。
    //     console.log(a);//报错
    //     let a = 10;

    // }  
    // fun(30);




    </script>
</body>
</html>